on:
#  workflow_dispatch:
  push:
    branches: [ "master" ]
jobs:
  zoo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.ZOO_BLOB_APP_ID }}
          private-key: ${{ secrets.ZOO_BLOB_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: "rl-tools,zoo-blob,zoo.rl.tools"
      - name: Use the token
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          gh api octocat
          gh repo view rl-tools/zoo-blob --json name

      - name: Setup Git
        run: |
          git config --global user.name 'RLtools Bot'
          git config --global user.email 'jonas.eschmann@gmail.com'
          git clone https://x-access-token:${{ steps.generate-token.outputs.token }}@github.com/rl-tools/zoo-blob.git experiments

      - name: Intel Apt repository
        timeout-minutes: 1
        run: |
          sudo apt update
          sudo apt install -y gpg-agent wget
          wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor | sudo tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
          sudo apt update
      - name: Install MKL
        run: |
          sudo apt install intel-oneapi-mkl-devel

      - name: Setup Intel oneAPI environment
        run: |
          source /opt/intel/oneapi/setvars.sh
          printenv >> $GITHUB_ENV

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libhdf5-dev zlib1g-dev

      - name: Configure CMake
        run: >
          cmake -B build
          -DCMAKE_BUILD_TYPE=Release
          -S .
          -DRL_TOOLS_ENABLE_TARGETS=ON
          -DRL_TOOLS_ENABLE_ZLIB=ON
          -DRL_TOOLS_BACKEND_ENABLE_MKL=ON

      - name: Build
        run: cmake --build build --target rl_zoo

      - name: Run Zoo
        working-directory: ${{ github.workspace }}
        run: ./build/src/rl/zoo/rl_zoo

      - name: Generate Index
        working-directory: ${{ github.workspace }}/tools
        run: | 
          ./index_experiments.sh
          ./index_experiments_static.sh
      - name: Commit Results
        working-directory: ${{ github.workspace }}/experiments
        run: |
          git add .
          git status
          git commit -m "workflow results"
          git push

      - name: Bump Page
        run: |
          git clone https://x-access-token:${{ steps.generate-token.outputs.token }}@github.com/rl-tools/zoo.rl.tools.git _temp_zoo
          cd _temp_zoo
          git submodule update --init --remote
          git add .
          git commit -m "bump"
          git push
          
